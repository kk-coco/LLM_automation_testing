add_generate_script: |
  Insert into llm_test.generated_script(group_id,spec_url,scenario_id,test_scenario,model_name,model_version,
  prompt_name,original_script,last_version, syntax_correct,syntax_correct_last,data_type_correctness,data_type_correctness_last, 
  param_type_check_detail_first_version,param_type_check_detail_last_version, method_coverage,method_coverage_last,
  method_coverage_detail_first_version,method_coverage_detail_last_version)
  Values(%s,%s, %s,%s, %s, %s, %s, %s, %s, %s, %s, %s,%s,%s,%s,%s,%s,%s,%s);
update_script_syntax: |
  Update llm_test.generated_script set syntax_correct=%s, update_time = NOW() where id=%s;
query_generate_script: |
  Select id, last_version from llm_test.generated_script where spec_url=%s and scenario_id=%s and group_id=%s order by id desc limit 1;

query_full_script: |
  Select id, last_version from llm_test.generated_script where id=%s;

query_generation_list: |
  Select id, spec_url,scenario_id, test_scenario, model_name, model_version, last_version from llm_test.generated_script order by id desc;
#  Select id, spec_url, test_scenario, model_name, model_version, last_version from llm_test.generated_script order by id desc limit %s offset %s;

query_list_num: |
  Select Count(id) as total from llm_test.generated_script;

query_generation_detail: |
  Select id, spec_url, test_scenario, model_name, model_version, last_version, edit_count from llm_test.generated_script 
  where scenario_id= %s order by id desc;

query_script_detail_by_id: |
  Select id, test_scenario,status_code_coverage, spec_url, model_name, model_version from llm_test.generated_script where id= %s order by id desc;

query_script_metrics: |
  Select syntax_correct_last, data_type_correctness_last, param_type_check_detail_last_version, status_code_coverage_last, 
  status_code_coverage_detail_last_version, method_coverage_last, method_coverage_detail_last_version,
  data_type_check_status,status_code_check_status,method_coverage_check_status,review_status
  from llm_test.generated_script where id= %s order by id desc;

set_data_type_metrics: |
  Update llm_test.generated_script set data_type_check_status=%s, update_time = NOW() where id=%s;

set_status_code_metrics: |
  Update llm_test.generated_script set status_code_check_status=%s, update_time = NOW() where id=%s;

set_method_coverage_metrics: |
  Update llm_test.generated_script set method_coverage_check_status=%s, update_time = NOW() where id=%s;
set_data_type_metrics_last: |
  Update llm_test.generated_script set data_type_correctness_last=%s, update_time = NOW() where id=%s;

set_status_code_metrics_last: |
  Update llm_test.generated_script set status_code_coverage_last=%s, update_time = NOW() where id=%s;

set_method_coverage_metrics_last: |
  Update llm_test.generated_script set method_coverage_last=%s, update_time = NOW() where id=%s;
set_syntax_metrics: |
  Update llm_test.script_case_detail set syntax_check_status=%s, update_time = NOW() where id=%s;
update_script_review_status: |
  Update llm_test.generated_script set review_status=1, update_time = NOW() where id=%s;
update_generation_detail: |
  Update llm_test.generated_script set last_version=%s, syntax_correct_last=%s, data_type_correctness_last=%s,
  param_type_check_detail_last_version=%s, data_type_check_status=NULL, status_code_check_status=NULL,
  method_coverage_last=%s,method_coverage_detail_last_version=%s,method_coverage_check_status=NULL, 
  review_status=0,edit_count = edit_count + 1, update_time = NOW() where id=%s;
update_status_coverage: |
  Update llm_test.generated_script set status_code_check_status=NULL,status_code_coverage_last=%s,
  status_code_coverage_detail_last_version=%s, update_time = NOW() where id=%s;
set_status_coverage: |
  Update llm_test.generated_script set status_code_coverage=%s,status_code_coverage_last=%s,
  status_code_coverage_detail_first_version=%s,status_code_coverage_detail_last_version=%s,
  update_time = NOW() where id=%s;
query_script_case_num: |
  SELECT COUNT(*) AS total, 
  SUM(CASE WHEN syntax_check_result = 0 THEN 1 ELSE 0 END) AS valid_count
  FROM script_case_detail WHERE script_id  = %s;

query_script_case_detail: |
  Select id, script_id, scenario_id, mark_name, last_version, edit_count, last_execution_status, last_error_message, 
  source_type, status, last_fail_reason, syntax_check_result
  from llm_test.script_case_detail where script_id=%s and scenario_id=%s;
  
query_scenario_group: |
  Select id, scenarios from llm_test.scenario_group  where scenarios=%s order by id desc;

query_scenario_group_by_id: |
  Select id, scenarios from llm_test.scenario_group where id=%s order by id desc;

query_script_group_detail: |
  SELECT 
  gsr.id as id, 
  gsr.scenario_id as scenario_id , 
  gsr.group_id as group_id, 
  ts.last_version
  FROM llm_test.group_scenario_relations gsr 
  JOIN llm_test.test_scenario ts 
  ON gsr.scenario_id = ts.id
  WHERE gsr.group_id = %s;

add_scenario_group: |
  Insert into llm_test.scenario_group(scenarios) Values(%s);

add_scenario_group_relations: |
  INSERT INTO llm_test.group_scenario_relations (group_id, scenario_id) VALUES (%s, %s);

add_script_case_detail: |
  Insert into llm_test.script_case_detail(script_id,scenario_id,mark_name,original_code,last_version,source_type, 
  syntax_check_result)
  Values(%s, %s, %s, %s, %s, %s, %s);

update_script_case_detail: |
  Update llm_test.script_case_detail set last_version=%s,mark_name=%s,syntax_check_result=%s, edit_count = edit_count + 1, 
  update_time = NOW() where id=%s;

update_script_case_status: |
  Update llm_test.script_case_detail set status=%s, update_time = NOW() where id=%s;

update_script_case_execution_fail_reason: |
  Update llm_test.script_case_detail set last_fail_reason=%s, update_time = NOW() where id=%s;

update_script_case_execution: |
  Update llm_test.script_case_detail set last_execution_status=%s,last_error_message=%s,last_fail_reason=NULL, update_time = NOW() where id=%s;

query_script_case_by_script_id: |
  Select id, script_id, mark_name from llm_test.script_case_detail where script_id = %s;

add_execution_result: |
  Insert into llm_test.execution_results(task_id, result_content) Values(%s, %s);

query_execution_result: |
  SELECT COUNT(*) AS total, 
  SUM(CASE WHEN status = 0 THEN 1 ELSE 0 END) AS valid_count,
  SUM(CASE WHEN status = 1 THEN 1 ELSE 0 END) AS invalid_count, 
  SUM(CASE WHEN source_type  = 'MANUAL' THEN 1 ELSE 0 END) AS added_num,
  SUM(CASE WHEN edit_count > 0 and source_type ='LLM' THEN 1 ELSE 0 END) AS edit_num,
  SUM(CASE WHEN last_execution_status  = 'PASSED' THEN 1 ELSE 0 END) AS pass_num,
  SUM(CASE WHEN last_execution_status  = 'FAILED' or last_execution_status  = 'ERROR' THEN 1 ELSE 0 END) AS fail_num
  FROM script_case_detail WHERE script_id  = %s;
#  Select id, task_id, result_content from llm_test.execution_results where task_id=%s order by id desc;

add_case_execution_results: |
  Insert into llm_test.case_execution_results(script_case_id,result_status,error_message)
  Values(%s, %s, %s);

update_case_execution_fail_reason: |
  UPDATE llm_test.case_execution_results 
  SET fail_reason = %s, update_time = NOW()
  WHERE id = (
    SELECT id FROM (
      SELECT id 
      FROM llm_test.case_execution_results 
      WHERE script_case_id = %s 
      ORDER BY create_time DESC 
      LIMIT 1
    ) AS latest
  );

add_api_info: |
  Insert into llm_test.api_info(title,swagger_url) Values(%s, %s);

add_api_details: |
  Insert into llm_test.api_details(swagger_id, api_path, summary, method, parameters, responses) 
  Values(%s, %s, %s,%s,%s, %s);

query_api_info: |
  Select id, title, swagger_url from llm_test.api_info where swagger_url=%s order by id desc limit 1;

query_api_info_by_id: |
  Select title,swagger_url from llm_test.api_info where id=%s;

query_api_details: |
  SELECT
      a.id,
      a.api_path,
      a.summary,
      a.method,
      a.parameters,
      a.responses,
      (
          SELECT gar2.group_id
          FROM llm_test.group_api_relations gar2
          JOIN llm_test.api_group ag2 ON ag2.id = gar2.group_id
          WHERE gar2.api_id = a.id
            AND ag2.is_system_scenario = 0
          ORDER BY gar2.group_id DESC
          LIMIT 1
      ) AS unit_group_id,
      (
          SELECT gar2.group_id
          FROM llm_test.group_api_relations gar2
          JOIN llm_test.api_group ag2 ON ag2.id = gar2.group_id
          WHERE gar2.api_id = a.id
            AND ag2.is_system_scenario = 1
          ORDER BY gar2.group_id DESC
          LIMIT 1
      ) AS system_group_id,
      (
          SELECT CASE
              WHEN COUNT(*) > 0 
               AND SUM(
                   CASE 
                       WHEN ts.status = 0 
                        AND ts.review_status = 1
                        AND EXISTS (
                            SELECT 1 FROM llm_test.generated_script gs
                            WHERE gs.scenario_id = ts.id
                              AND gs.review_status = 1
                        )
                       THEN 1 ELSE 0 END
               ) = COUNT(*)
              THEN 1 ELSE 0 END
          FROM llm_test.test_scenario ts
          WHERE ts.group_id = (
              SELECT gar2.group_id
              FROM llm_test.group_api_relations gar2
              JOIN llm_test.api_group ag2 ON ag2.id = gar2.group_id
              WHERE gar2.api_id = a.id
                AND ag2.is_system_scenario = 0
              ORDER BY gar2.group_id DESC
              LIMIT 1
          )
            AND ts.status = 0
      ) AS unit_review_status,
      (
          SELECT CASE
              WHEN COUNT(*) > 0 
               AND SUM(
                   CASE 
                       WHEN ts.status = 0 
                        AND ts.review_status = 1
                        AND EXISTS (
                            SELECT 1 FROM llm_test.generated_script gs
                            WHERE gs.scenario_id = ts.id
                              AND gs.review_status = 1
                        )
                       THEN 1 ELSE 0 END
               ) = COUNT(*)
              THEN 1 ELSE 0 END
          FROM llm_test.test_scenario ts
          WHERE ts.group_id = (
              SELECT gar2.group_id
              FROM llm_test.group_api_relations gar2
              JOIN llm_test.api_group ag2 ON ag2.id = gar2.group_id
              WHERE gar2.api_id = a.id
                AND ag2.is_system_scenario = 1
              ORDER BY gar2.group_id DESC
              LIMIT 1
          )
            AND ts.status = 0
      ) AS system_review_status

  FROM llm_test.api_details a
  WHERE a.swagger_id = %s
  ORDER BY a.id DESC;

#  SELECT
#    a.id,
#    a.api_path,
#    a.summary,
#    a.method,
#    a.parameters,
#    a.responses,
#    MAX(CASE WHEN ag.is_system_scenario = 0 THEN gar.group_id END) AS unit_group_id,
#    MAX(CASE WHEN ag.is_system_scenario = 1 THEN gar.group_id END) AS system_group_id
#    FROM llm_test.api_details a
#    LEFT JOIN llm_test.group_api_relations gar
#        ON gar.api_id = a.id
#    LEFT JOIN llm_test.api_group ag
#        ON ag.id = gar.group_id
#    LEFT JOIN llm_test.test_scenario ts
#        ON ts.group_id = gar.group_id
#    WHERE a.swagger_id = %s
#    GROUP BY a.id
#    ORDER BY a.id DESC;


#  Select id, api_path, summary, method, parameters, responses from llm_test.api_details where swagger_id=%s order by id desc;
#  Select id, api_path, summary, method, parameters, responses from llm_test.api_details where swagger_id=%s order by id desc limit %s offset %s;

query_api_num: |
  Select Count(id) as total from llm_test.api_details where swagger_id=%s;

query_used_api_num: |
  SELECT COUNT(DISTINCT gar.api_id) AS generated_count FROM llm_test.group_api_relations gar
  JOIN llm_test.test_scenario ts ON ts.group_id = gar.group_id
  JOIN llm_test.api_details a ON a.id = gar.api_id
  WHERE a.swagger_id = %s;


query_group: |
  Select id, apis, group_name,is_system_scenario from llm_test.api_group where apis=%s order by id desc;

query_group_by_id: |
  Select id, apis, group_name,is_system_scenario from llm_test.api_group where id=%s order by id desc;

add_group: |
  Insert into llm_test.api_group(apis, group_name, is_system_scenario) Values(%s,%s,%s);

add_group_relations: |
  INSERT INTO llm_test.group_api_relations (group_id, api_id) VALUES (%s, %s);

query_test_scenario: |
  SELECT
    a.id,
    a.group_id,
    a.scenario_title,
    a.review_status,
    a.last_version,
    a.status,
    a.edit_count,
    CASE 
        WHEN EXISTS (
            SELECT 1 
            FROM llm_test.generated_script gs 
            WHERE gs.scenario_id = a.id
        ) 
        THEN (
            SELECT gs.review_status
            FROM llm_test.generated_script gs
            WHERE gs.scenario_id = a.id
            ORDER BY gs.id DESC
            LIMIT 1
        )
        ELSE NULL
    END AS script_review_status
    FROM llm_test.test_scenario a
    WHERE a.group_id = %s
    ORDER BY a.id DESC;



#  Select id, group_id, last_version, status, edit_count from llm_test.test_scenario where group_id=%s order by id desc;
#  Select id, group_id, last_version from llm_test.test_scenario where group_id=%s and status=0 order by id desc limit %s offset %s;

check_test_scenario: |
  Select id, group_id, last_version from llm_test.test_scenario where group_id=%s order by id desc;

query_scenario_num: |
  SELECT
  COUNT(*) AS total,
  SUM(CASE WHEN status = 0 THEN 1 ELSE 0 END) AS valid_count,
  SUM(CASE WHEN status = 1 THEN 1 ELSE 0 END) AS invalid_count, 
  SUM(CASE WHEN model_version = '' THEN 1 ELSE 0 END) AS added_num,
  SUM(CASE WHEN edit_count > 0 THEN 1 ELSE 0 END) AS edit_num
  FROM test_scenario WHERE group_id = %s;
#  Select Count(id) as total from llm_test.test_scenario where group_id=%s;
query_used_scenario_num: |
  SELECT 
  COUNT(DISTINCT gs.scenario_id) AS generated_count
  FROM llm_test.test_scenario a
  LEFT JOIN llm_test.generated_script gs 
    ON a.id = gs.scenario_id
  WHERE a.group_id = %s
    AND gs.scenario_id IS NOT NULL;


query_scenario_by_scenario: |
  Select id from llm_test.test_scenario where group_id=%s and scenario_title=%s and last_version=%s;

add_test_scenario: |
  Insert into llm_test.test_scenario(group_id,scenario_title, first_version, last_version, model_name, model_version, 
  is_system_scenario) Values(%s, %s, %s, %s, %s, %s, %s);

update_test_scenario: |
  Update llm_test.test_scenario set scenario_title=%s, last_version=%s, edit_count = edit_count + 1, update_time = NOW() where id=%s;

update_test_scenario_status: |
  Update llm_test.test_scenario set status=%s,review_status=1, update_time = NOW() where id=%s;

query_api: |
  Select  id, swagger_id, api_path, summary, method, parameters, responses from llm_test.api_details  where id IN ({});
